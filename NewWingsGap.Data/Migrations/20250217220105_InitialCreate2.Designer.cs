// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NewWingsGap.Data.Migrations
{
    [DbContext(typeof(NewWingsGapContext))]
    [Migration("20250217220105_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Budget", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("FourO1KContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HealthCareContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id", "Year");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets", "dbo");
                });

            modelBuilder.Entity("BudgetGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetYear")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId", "BudgetYear");

                    b.ToTable("BudgetGoals", "dbo");
                });

            modelBuilder.Entity("BudgetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetYear")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId", "BudgetYear");

                    b.ToTable("BudgetItems", "dbo");
                });

            modelBuilder.Entity("SalesGoal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageCommision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageLossRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AverageSalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommissionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossSalesNeeded")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetSalesClosed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalesNeeded")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id", "Year");

                    b.HasIndex("UserId");

                    b.ToTable("SalesGoals", "dbo");
                });

            modelBuilder.Entity("SalesGoalQuarter", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<int>("FollowUp")
                        .HasColumnType("int");

                    b.Property<int>("GrossSalesNeeded")
                        .HasColumnType("int");

                    b.Property<int>("Internet")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Realtor")
                        .HasColumnType("int");

                    b.Property<int>("Referral")
                        .HasColumnType("int");

                    b.Property<int>("SalesGoalId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesGoalYear")
                        .HasColumnType("int");

                    b.Property<int>("SelfOriginating")
                        .HasColumnType("int");

                    b.Property<int>("WalkIn")
                        .HasColumnType("int");

                    b.HasKey("Id", "Quarter");

                    b.HasIndex("SalesGoalId", "SalesGoalYear");

                    b.ToTable("SalesGoalQuarters", "dbo");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossAnnualIncome")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportingManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Salaried")
                        .HasColumnType("bit");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("Budget", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BudgetGoal", b =>
                {
                    b.HasOne("Budget", "Budget")
                        .WithMany("BudgetGoals")
                        .HasForeignKey("BudgetId", "BudgetYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("BudgetItem", b =>
                {
                    b.HasOne("Budget", "Budget")
                        .WithMany("BudgetItems")
                        .HasForeignKey("BudgetId", "BudgetYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("SalesGoal", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalesGoalQuarter", b =>
                {
                    b.HasOne("SalesGoal", "SalesGoal")
                        .WithMany("SalesGoalQuarters")
                        .HasForeignKey("SalesGoalId", "SalesGoalYear");

                    b.Navigation("SalesGoal");
                });

            modelBuilder.Entity("Budget", b =>
                {
                    b.Navigation("BudgetGoals");

                    b.Navigation("BudgetItems");
                });

            modelBuilder.Entity("SalesGoal", b =>
                {
                    b.Navigation("SalesGoalQuarters");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Budgets");
                });
#pragma warning restore 612, 618
        }
    }
}
