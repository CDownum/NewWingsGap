@page "/gapFinancialWorksheet"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject GapApiClient GapApiClient

<PageTitle>GAP Financial Worksheet</PageTitle>

<h1>GAP Financial Worksheet</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (budgets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Gross Annual Income</th>
                <th>Year</th>
                <th>Health Care Contribution</th>
                <th>401K Contribution</th>
                <th>Taxable Income</th>
                <th>Net Annual Income</th>
                <th>Federal Tax</th>
                <th>State Tax</th>
                <th>Medicare Tax</th>
                <th>FICA Tax</th>
                <th>Monthly Survival Budget Total</th>
                <th>Survival Full Year</th>
                <th>All Budget Goal Cost</th>
                <th>Remainder</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var budget in budgets)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.MiddleName</td>
                    <td>@user.LastName</td>
                    <td>@user.StartDate.ToShortDateString()</td>
                    <td>@(user.EndDate == DateTime.MinValue ? string.Empty : user.EndDate.ToShortDateString())</td>
                    <td>@user.GrossAnnualIncome.ToString("C")</td>
                    <td>@budget.Year</td>
                    <td>@budget.HealthCareContribution.ToString("C")</td>
                    <td>@budget.FourO1KContribution.ToString("C")</td>
                    <td>@budget.TaxableIncome.ToString("C")</td>
                    <td>@budget.NetAnnualIncome.ToString("C")</td>
                    <td>@budget.FederalTax.ToString("C")</td>
                    <td>@budget.StateTax.ToString("C")</td>
                    <td>@budget.MedicadeTax.ToString("C")</td>
                    <td>@budget.FICATax.ToString("C")</td>
                    <td>@budget.MonthlySurvivalBudgetTotal.ToString("C")</td>
                    <td>@budget.SurvivalFullYear.ToString("C")</td>
                    <td>@budget.AllBudgetGoalCost.ToString("C")</td>
                    <td>@budget.Remainder.ToString("C")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private User? user;
    private Budget[]? budgets;

    protected override async Task OnInitializedAsync()
    {
        user = await GapApiClient.GetUserByIdAsync(1);
        budgets = await GapApiClient.GetBudgetsByUserIdAsync(1);
    }
}
