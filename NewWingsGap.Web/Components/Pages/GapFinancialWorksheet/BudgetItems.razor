@namespace BudgetGoals
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject GapApiClient GapApiClient

@if (budgets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>Monthly Budget - "Survival"</h2>
    <table id="0HNAE2QT671G2" class="b-table table table-striped table-bordered table-hover b-datagrid">
        <thead class="table-thead-theme table-light">
            <tr>
                <th scope="col" style="top: 0px; width: 60px">
                    <button id="0HNAE2QT671V4" type="button" class="btn btn-success">New</button>
                </th>
                <th scope="col" style="top: 0px; width: 150px" class="cursor-pointer">
                    <div class="d-inline-flex">Description</div>
                </th>
                <th scope="col" style="top: 0px; width: 150px" class="cursor-pointer">
                    <div class="d-inline-flex">Amount</div>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var budget in budgets)
            {
                @foreach (var item in budget.BudgetItems)
                {
                    <tr class="table-primary table-row-selectable">
                        <td _bl_11513>
                            <div class="gap-2 d-inline-flex">
                                <button type="button" class="btn btn-primary">Edit</button>
                                <button type="button" class="btn btn-danger">Delete</button>
                            </div>
                        </td>
                        <td data-caption="Description">@item.Description</td>
                        <td class="text-end" data-caption="Amount">@item.Amount.ToString("C")</td>
                    </tr>
                }
            }            
        </tbody>
        <tfoot>
            <tr>
                <td>
                    <span class="fw-bold">Totals:</span>
                </td>
                <td></td>
                <td class="text-end" style="width: 140px">@budgets.FirstOrDefault()?.BudgetItems?.Sum(x => x.Amount)</td>
                
            </tr>
        </tfoot>
    </table>
}

@code {  
    private Budget[]? budgets;

    protected override async Task OnInitializedAsync()
    {
        budgets = await GapApiClient.GetBudgetsByUserIdAsync(1);
    }
}
